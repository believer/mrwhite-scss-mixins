/* Shapes and sizing
--------------------------------------------------------*/
@mixin size($width, $height:$width) {
  height:$height;
  width:$width;
}

@mixin circle($size) {
  @include size($size);
  @include border-radius($size);
}

@mixin oval($size) {
  $half: $size / 2;
  @include size($size, $half);
  $radius:$size / $half + "px";
  @include border-radius($radius);
}

@mixin square($size) {
  @include size($size);
}

/* Helper functions
--------------------------------------------------------*/
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

/* Mixins
--------------------------------------------------------*/

/**
 * Apperance
 */
@mixin appearance($property:none) {
  @include prefix(appearance, $property);
}

/**
 * Border radius
 */
@mixin border-radius($radius:3px) {
  @include prefix(border-radius, $radius);
}

/**
 * Box shadow
 */
@mixin box-shadow($shadow) {
  @include prefix(box-shadow, $shadow);
}

/**
 * Box sizing
 */
@mixin box-sizing($type:border-box) {
  @include prefix(box-sizing, $type); 
}

/**
 * Centering
 */
@mixin centered($x,$y:$x) {
  @include prefix(transform, translateX(#{$x}) translateY(#{$y}) );
}

@mixin center($coord, $x:top, $y:left, $xpos:0, $ypos:0) {
  @if $coord == 'x' {
    @include centered(-50%,0);
  } @else if $coord == 'y' {
    @include centered(0,-50%);
  } @else if $coord == 'both' {
    @include centered(-50%);
  }
}

/**
 * Columns
 */
@mixin columns($columns:2, $gap: 20px) {
  @include prefix(column-count, $columns);
  @include prefix(column-gap, $gap);
}

/**
 * Font size
 */
@mixin font($size, $style:normal) {
  $clean-size: strip-units($size);
  $rem: ($clean-size / 10);

  font-size:#{$clean-size} + "px";
  font-size:#{$rem} + "rem";
  font-style:$style;
}

/**
 * Positioning
 */
@mixin positioned($d1, $d2, $p1, $p2, $p) {
  #{$d1}:#{$p1};
  #{$d2}:#{$p2};
  position:$p;
}

@mixin position($d1, $d2, $p1:0, $p2:0, $p:absolute, $full:false) {
  @include positioned($d1,$d2,$p1,$p2,$p);
  
  @if $full == true {
    @include size(100%);    
  }
}

/**
 * Prefixes
 * @type {[type]}
 */
$prefixes: webkit moz ms o;

@mixin prefix($property, $value) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: #{$value};
  }
  #{$property}: #{$value};
}

/**
 * Rotate
 */
@mixin rotate($angle) {
  @include transform(rotate($angle));
}

/**
 * Scale
 */
@mixin scale($ratio) {
  @include transform(scale($ratio));
}

/**
 * Text overflow
 */
@mixin text-overflow() {
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
}

/**
 * Transform
 */
@mixin transform($transform) {
  @include prefix(transform, #{$transform});
}